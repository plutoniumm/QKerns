import{S as Pe,i as Ve,s as Ae,k as _,l as d,m as y,h as l,n as N,p as Te,b as V,C as X,o as ke,v as Be,q as v,a as M,x as q,r as g,c as I,y as G,F as a,z as J,f as Q,t as U,A as W}from"../../../chunks/index-ea944ca2.js";import{_ as Le}from"../../../chunks/preload-helper-41c905a7.js";const Oe=(o=0,e=1)=>Math.random()*(e-o)+o;function Ne(o){let e;return{c(){e=_("div"),this.h()},l(n){e=d(n,"DIV",{id:!0,class:!0,style:!0}),y(e).forEach(l),this.h()},h(){N(e,"id",o[1]),N(e,"class","w-100 fade-up h-100 plut svelte-185ij4c"),Te(e,"height","400px")},m(n,i){V(n,e,i),o[5](e)},p:X,i:X,o:X,d(n){n&&l(e),o[5](null)}}}function Re(o,e,n){let i;const w=Math.round(Math.random()*1e10).toString(36);let{F:c=(r,s)=>r*s}=e,{samples:m=1e3}=e,{name:F="Function"}=e;const p=new Float32Array(m),f=new Float32Array(m),b=new Float32Array(m);ke(async()=>{const r=await Le(()=>import("../../../chunks/plotly-f659ad58.js").then(h=>h.p),[],import.meta.url);for(let h=0;h<m;h++)p[h]=Oe(-1,1),f[h]=Oe(-1,1),b[h]=c(p[h],f[h]);let s={x:p,y:f,z:b,mode:"markers",marker:{size:Math.floor(16/Math.round(Math.log10(m))),color:b,colorscale:"Viridis",opacity:.75},type:"scatter3d"};r.newPlot(w,[s],{title:F+" 3D Plot",margin:{l:20,r:20,b:50,t:50}})});function A(r){Be[r?"unshift":"push"](()=>{i=r,n(0,i)})}return o.$$set=r=>{"F"in r&&n(2,c=r.F),"samples"in r&&n(3,m=r.samples),"name"in r&&n(4,F=r.name)},[i,w,c,m,F,A]}class De extends Pe{constructor(e){super(),Ve(this,e,Re,Ne,Ae,{F:2,samples:3,name:4})}}function je(o){let e;return{c(){e=_("div"),this.h()},l(n){e=d(n,"DIV",{id:!0,class:!0,style:!0}),y(e).forEach(l),this.h()},h(){N(e,"id",o[1]),N(e,"class","w-100 fade-up h-100 plut svelte-185ij4c"),Te(e,"height","400px")},m(n,i){V(n,e,i),o[5](e)},p:X,i:X,o:X,d(n){n&&l(e),o[5](null)}}}function qe(o,e,n){let i;const w=Math.round(Math.random()*1e10).toString(36);let{F:c=(s,h)=>s*h}=e,{samples:m=50}=e,{name:F="Function"}=e;const p=(s,h,u)=>{const H=new Float32Array(u),x=(h-s)/(u-1);for(let E=0;E<u;E++)H[E]=s+x*E;return H},f=p(-1,1,m),b=p(-1,1,m),A=new Array(m);ke(async()=>{const s=await Le(()=>import("../../../chunks/plotly-f659ad58.js").then(u=>u.p),[],import.meta.url);for(let u=0;u<m;u++)A[u]=new Float32Array(f.map(H=>c(H,b[u])));let h={x:f,y:b,z:A,type:"heatmap",hoverongaps:!1};s.newPlot(w,[h],{title:F+" Heatmap",margin:{l:20,r:20,b:50,t:50}})});function r(s){Be[s?"unshift":"push"](()=>{i=s,n(0,i)})}return o.$$set=s=>{"F"in s&&n(2,c=s.F),"samples"in s&&n(3,m=s.samples),"name"in s&&n(4,F=s.name)},[i,w,c,m,F,r]}class He extends Pe{constructor(e){super(),Ve(this,e,qe,je,Ae,{F:2,samples:3,name:4})}}function Ge(o){let e,n,i,w,c,m,F,p,f,b,A,r,s,h,u,H,x,E,ce,Se="{-\\gamma * (x - y)^2}",fe,he,pe,k,ue,ze="{-\\gamma * (x - y)^2}",_e,de,ye,S,z,$e,C,te,D,B,ve,Ce="{-\\gamma * |x - y|}",ge,Fe,we,L,xe,Ke="{-\\gamma * |x - y|}",Ee,Me,Ie,K,O,be,T,ae;return s=new De({props:{samples:1e3}}),u=new He({props:{samples:50}}),z=new De({props:{samples:1e3,F:o[1]}}),C=new He({props:{samples:50,F:o[2]}}),O=new De({props:{samples:1e3,F:o[3]}}),T=new He({props:{samples:50,F:o[4]}}),{c(){e=_("section"),n=_("h1"),i=v("Kernel Functions"),w=M(),c=_("section"),m=_("h2"),F=v("Baseline: $F(x, y) = x * y$"),p=M(),f=_("div"),b=v(`Here we plot the function $F(x, y) = x * y$ simply for an established
    baseline.`),A=M(),r=_("div"),q(s.$$.fragment),h=M(),q(u.$$.fragment),H=M(),x=_("section"),E=_("h2"),ce=v("RBF Kernel: $F(x, y) = e^"),fe=v(Se),he=v("$"),pe=M(),k=_("div"),ue=v("Here we plot the function $F(x, y) = e^"),_e=v(ze),de=v(`$, where
    $\\gamma$ is a hyperparameter.`),ye=M(),S=_("div"),q(z.$$.fragment),$e=M(),q(C.$$.fragment),te=M(),D=_("section"),B=_("h2"),ve=v("Laplacian Kernel: $F(x, y) = e^"),ge=v(Ce),Fe=v("$"),we=M(),L=_("div"),xe=v("Here we plot the function $F(x, y) = e^"),Ee=v(Ke),Me=v(`$, where
    $\\gamma$ is a hyperparameter.`),Ie=M(),K=_("div"),q(O.$$.fragment),be=M(),q(T.$$.fragment),this.h()},l(t){e=d(t,"SECTION",{});var $=y(e);n=d($,"H1",{});var Y=y(n);i=g(Y,"Kernel Functions"),Y.forEach(l),$.forEach(l),w=I(t),c=d(t,"SECTION",{});var P=y(c);m=d(P,"H2",{});var Z=y(m);F=g(Z,"Baseline: $F(x, y) = x * y$"),Z.forEach(l),p=I(P),f=d(P,"DIV",{});var ee=y(f);b=g(ee,`Here we plot the function $F(x, y) = x * y$ simply for an established
    baseline.`),ee.forEach(l),A=I(P),r=d(P,"DIV",{class:!0});var ne=y(r);G(s.$$.fragment,ne),h=I(ne),G(u.$$.fragment,ne),ne.forEach(l),P.forEach(l),H=I(t),x=d(t,"SECTION",{});var R=y(x);E=d(R,"H2",{});var se=y(E);ce=g(se,"RBF Kernel: $F(x, y) = e^"),fe=g(se,Se),he=g(se,"$"),se.forEach(l),pe=I(R),k=d(R,"DIV",{});var le=y(k);ue=g(le,"Here we plot the function $F(x, y) = e^"),_e=g(le,ze),de=g(le,`$, where
    $\\gamma$ is a hyperparameter.`),le.forEach(l),ye=I(R),S=d(R,"DIV",{class:!0});var re=y(S);G(z.$$.fragment,re),$e=I(re),G(C.$$.fragment,re),re.forEach(l),R.forEach(l),te=I(t),D=d(t,"SECTION",{});var j=y(D);B=d(j,"H2",{});var oe=y(B);ve=g(oe,"Laplacian Kernel: $F(x, y) = e^"),ge=g(oe,Ce),Fe=g(oe,"$"),oe.forEach(l),we=I(j),L=d(j,"DIV",{});var ie=y(L);xe=g(ie,"Here we plot the function $F(x, y) = e^"),Ee=g(ie,Ke),Me=g(ie,`$, where
    $\\gamma$ is a hyperparameter.`),ie.forEach(l),Ie=I(j),K=d(j,"DIV",{class:!0});var me=y(K);G(O.$$.fragment,me),be=I(me),G(T.$$.fragment,me),me.forEach(l),j.forEach(l),this.h()},h(){N(r,"class","ƒ"),N(S,"class","ƒ"),N(K,"class","ƒ")},m(t,$){V(t,e,$),a(e,n),a(n,i),V(t,w,$),V(t,c,$),a(c,m),a(m,F),a(c,p),a(c,f),a(f,b),a(c,A),a(c,r),J(s,r,null),a(r,h),J(u,r,null),V(t,H,$),V(t,x,$),a(x,E),a(E,ce),a(E,fe),a(E,he),a(x,pe),a(x,k),a(k,ue),a(k,_e),a(k,de),a(x,ye),a(x,S),J(z,S,null),a(S,$e),J(C,S,null),V(t,te,$),V(t,D,$),a(D,B),a(B,ve),a(B,ge),a(B,Fe),a(D,we),a(D,L),a(L,xe),a(L,Ee),a(L,Me),a(D,Ie),a(D,K),J(O,K,null),a(K,be),J(T,K,null),ae=!0},p(t,[$]){const Y={};$&1&&(Y.F=t[1]),z.$set(Y);const P={};$&1&&(P.F=t[2]),C.$set(P);const Z={};$&1&&(Z.F=t[3]),O.$set(Z);const ee={};$&1&&(ee.F=t[4]),T.$set(ee)},i(t){ae||(Q(s.$$.fragment,t),Q(u.$$.fragment,t),Q(z.$$.fragment,t),Q(C.$$.fragment,t),Q(O.$$.fragment,t),Q(T.$$.fragment,t),ae=!0)},o(t){U(s.$$.fragment,t),U(u.$$.fragment,t),U(z.$$.fragment,t),U(C.$$.fragment,t),U(O.$$.fragment,t),U(T.$$.fragment,t),ae=!1},d(t){t&&l(e),t&&l(w),t&&l(c),W(s),W(u),t&&l(H),t&&l(x),W(z),W(C),t&&l(te),t&&l(D),W(O),W(T)}}}function Je(o,e,n){let i;const w=(p,f)=>Math.exp(-1*i[0]*(p-f)**2),c=(p,f)=>Math.exp(-1*i[0]*(p-f)**2),m=(p,f)=>Math.exp(-1*i[0]*Math.abs(p-f)),F=(p,f)=>Math.exp(-1*i[0]*Math.abs(p-f));return n(0,i=new Float32Array([.1,.2,.3,.4,.5,.6,.7,.8,.9,1])),[i,w,c,m,F]}class We extends Pe{constructor(e){super(),Ve(this,e,Je,Ge,Ae,{})}}export{We as default};
